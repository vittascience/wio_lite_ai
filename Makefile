##########################################################################################################################
# File automatically-generated by tool: [projectgenerator] version: [4.2.0-B44] date: [Tue Jan 30 22:12:56 CET 2024]
##########################################################################################################################

# ------------------------------------------------
# Generic Makefile (based on gcc)
#
# ChangeLog :
#	2017-02-10 - Several enhancements + project update mode
#   2015-07-22 - first version
# ------------------------------------------------

######################################
# target
######################################
TARGET = wio_ai


######################################
# building variables
######################################
# debug build?
DEBUG = 1
# optimization
OPT = -O0


#######################################
# paths
#######################################
# Build path
ifdef bsp_config_seedstudio
BUILD_DIR = build_seed
else
BUILD_DIR = build_vitta
endif
######################################
# source
######################################
# C sources
C_SOURCES_COMMON =  \
X-CUBE-AI/App/ai_interface.c \
X-CUBE-AI/App/ai_utils.c \
X-CUBE-AI/App/network.c \
X-CUBE-AI/App/network_data.c \
X-CUBE-AI/App/network_data_params.c \
X-CUBE-AI/App/app_x-cube-ai.c \
X-CUBE-AI/App/app_utility.c \
X-CUBE-AI/App/app_network.c \
Core/Src/main.c \
Core/Src/gpio.c \
Core/Src/i2c.c \
Core/Src/crc.c \
Core/Src/dma.c \
Core/Src/octospi.c \
Core/Src/tim.c \
Core/Src/usart.c \
Core/Src/vittascience_i2c.c \
Core/Src/sysmem.c \
Core/Src/syscalls.c \
Core/Src/system_stm32h7xx.c  \
Core/Src/stm32h7xx_it.c \
Core/Src/stm32h7xx_hal_msp.c \
Drivers/BSP/Components/aps6408/aps6408.c \
Drivers/BSP/Components/ov2640/ov2640.c \
Drivers/BSP/Components/W25Q128/W25Q128.c \
Drivers/BSP/wio_lite_ai/wio_lite_ai_bus.c \
Drivers/BSP/wio_lite_ai/wio_lite_ai_camera.c \
Drivers/BSP/wio_lite_ai/wio_lite_ai_ospi.c \
Drivers/BSP/wio_lite_ai/wio_lite_ai.c \
Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c \
Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_crc.c \
Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_crc_ex.c \
Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c \
Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc_ex.c \
Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c \
Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c \
Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_gpio.c \
Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c \
Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma.c \
Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma_ex.c \
Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c \
Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c \
Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_pwr.c \
Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_pwr_ex.c \
Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c \
Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c \
Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c_ex.c \
Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_exti.c \
Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dcmi.c \
Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_ltdc.c \
Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_ltdc_ex.c \
Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_ospi.c \
Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c \
Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_tim.c \
Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_tim_ex.c \
Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c \
Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c \
Middlewares/ST/STM32_ImageProcessing_Library/Src/apriltag.c \
Middlewares/ST/STM32_ImageProcessing_Library/Src/array.c \
Middlewares/ST/STM32_ImageProcessing_Library/Src/binary.c \
Middlewares/ST/STM32_ImageProcessing_Library/Src/blob.c \
Middlewares/ST/STM32_ImageProcessing_Library/Src/clahe.c \
Middlewares/ST/STM32_ImageProcessing_Library/Src/collections.c \
Middlewares/ST/STM32_ImageProcessing_Library/Src/draw.c \
Middlewares/ST/STM32_ImageProcessing_Library/Src/edge.c \
Middlewares/ST/STM32_ImageProcessing_Library/Src/filter.c \
Middlewares/ST/STM32_ImageProcessing_Library/Src/fmath.c \
Middlewares/ST/STM32_ImageProcessing_Library/Src/haar.c \
Middlewares/ST/STM32_ImageProcessing_Library/Src/hough.c \
Middlewares/ST/STM32_ImageProcessing_Library/Src/imlib.c \
Middlewares/ST/STM32_ImageProcessing_Library/Src/integral.c \
Middlewares/ST/STM32_ImageProcessing_Library/Src/integral_mw.c \
Middlewares/ST/STM32_ImageProcessing_Library/Src/jdata_conf.c \
Middlewares/ST/STM32_ImageProcessing_Library/Src/lab_tab.c \
Middlewares/ST/STM32_ImageProcessing_Library/Src/line.c \
Middlewares/ST/STM32_ImageProcessing_Library/Src/matd.c \
Middlewares/ST/STM32_ImageProcessing_Library/Src/mathop.c \
Middlewares/ST/STM32_ImageProcessing_Library/Src/point.c \
Middlewares/ST/STM32_ImageProcessing_Library/Src/pool.c \
Middlewares/ST/STM32_ImageProcessing_Library/Src/rectangle.c \
Middlewares/ST/STM32_ImageProcessing_Library/Src/sincos_tab.c \
Middlewares/ST/STM32_ImageProcessing_Library/Src/stats.c \
Middlewares/ST/STM32_ImageProcessing_Library/Src/stm32ipl.c \
Middlewares/ST/STM32_ImageProcessing_Library/Src/stm32ipl_binary.c \
Middlewares/ST/STM32_ImageProcessing_Library/Src/stm32ipl_blob.c \
Middlewares/ST/STM32_ImageProcessing_Library/Src/stm32ipl_convert.c \
Middlewares/ST/STM32_ImageProcessing_Library/Src/stm32ipl_drawing.c \
Middlewares/ST/STM32_ImageProcessing_Library/Src/stm32ipl_edge.c \
Middlewares/ST/STM32_ImageProcessing_Library/Src/stm32ipl_equalization.c \
Middlewares/ST/STM32_ImageProcessing_Library/Src/stm32ipl_filtering.c \
Middlewares/ST/STM32_ImageProcessing_Library/Src/stm32ipl_find_pixels.c \
Middlewares/ST/STM32_ImageProcessing_Library/Src/stm32ipl_geometry.c \
Middlewares/ST/STM32_ImageProcessing_Library/Src/stm32ipl_hough.c \
Middlewares/ST/STM32_ImageProcessing_Library/Src/stm32ipl_image_io.c \
Middlewares/ST/STM32_ImageProcessing_Library/Src/stm32ipl_image_io_jpg_sw.c \
Middlewares/ST/STM32_ImageProcessing_Library/Src/stm32ipl_integral.c \
Middlewares/ST/STM32_ImageProcessing_Library/Src/stm32ipl_masking.c \
Middlewares/ST/STM32_ImageProcessing_Library/Src/stm32ipl_math_op.c \
Middlewares/ST/STM32_ImageProcessing_Library/Src/stm32ipl_mem_alloc.c \
Middlewares/ST/STM32_ImageProcessing_Library/Src/stm32ipl_morph_op.c \
Middlewares/ST/STM32_ImageProcessing_Library/Src/stm32ipl_object_det.c \
Middlewares/ST/STM32_ImageProcessing_Library/Src/stm32ipl_point.c \
Middlewares/ST/STM32_ImageProcessing_Library/Src/stm32ipl_rect.c \
Middlewares/ST/STM32_ImageProcessing_Library/Src/stm32ipl_resize.c \
Middlewares/ST/STM32_ImageProcessing_Library/Src/stm32ipl_rotation.c \
Middlewares/ST/STM32_ImageProcessing_Library/Src/stm32ipl_stats.c \
Middlewares/ST/STM32_ImageProcessing_Library/Src/stm32ipl_template.c \
Middlewares/ST/STM32_ImageProcessing_Library/Src/stm32ipl_warping.c \
Middlewares/ST/STM32_ImageProcessing_Library/Src/template.c \
Middlewares/ST/STM32_ImageProcessing_Library/Src/umm_malloc.c \
Middlewares/ST/STM32_ImageProcessing_Library/Src/xyz_tab.c \

C_SOURCES_SEEDSTUDIO_SCREEN = \
Drivers/BSP/Components/LCD/BSP_LCD.c \
Core/Src/ltdc.c \

C_SOURCES_VITTASCIENCE_SPI_SCREEN = \
Core/Src/app_display.c \
Drivers/BSP/Components/ili9341/ILI9341_STM32_Driver.c \
Drivers/BSP/wio_lite_ai/wio_lite_ai_display_spi.c \
Drivers/BSP/wio_lite_ai/wio_lite_ai_lcd.c \
Utilities/lcd/stm32_lcd.c

ifdef bsp_config_seedstudio
C_SOURCES = $(C_SOURCES_COMMON) $(C_SOURCES_SEEDSTUDIO_SCREEN)
else
C_SOURCES = $(C_SOURCES_COMMON) $(C_SOURCES_VITTASCIENCE_SPI_SCREEN)
endif
# ASM sources
ASM_SOURCES =  \
Core/Startup/startup_stm32h725aeix.s

# ASM sources
ASMM_SOURCES = 


#######################################
# binaries
#######################################
PREFIX = arm-none-eabi-
# The gcc compiler bin path can be either defined in make command via GCC_PATH variable (> make GCC_PATH=xxx)
# either it can be added to the PATH environment variable.
ifdef GCC_PATH
CC = $(GCC_PATH)/$(PREFIX)gcc
AS = $(GCC_PATH)/$(PREFIX)gcc -x assembler-with-cpp
CP = $(GCC_PATH)/$(PREFIX)objcopy
SZ = $(GCC_PATH)/$(PREFIX)size
else
CC = $(PREFIX)gcc
AS = $(PREFIX)gcc -x assembler-with-cpp
CP = $(PREFIX)objcopy
SZ = $(PREFIX)size
endif
HEX = $(CP) -O ihex
BIN = $(CP) -O binary -S
 
#######################################
# CFLAGS
#######################################
# cpu
CPU = -mcpu=cortex-m7

# fpu
FPU = -mfpu=fpv5-d16

# float-abi
FLOAT-ABI = -mfloat-abi=hard

# mcu
MCU = $(CPU) -mthumb $(FPU) $(FLOAT-ABI)

# macros for gcc
# AS defines
AS_DEFS = 

# C defines
C_DEFS =  \
-DUSE_HAL_DRIVER \
-DSTM32H725xx \
-D__FPU_PRESENT=1 \
-DARM_MATH_CM7 \
-DSTM32IPL

ifdef bsp_config_seedstudio
C_DEFS += -DBSP_CONFIG_SEEDSTUDIO
else
C_DEFS += -DBSP_CONFIG_VITTASCIENCE
endif


# AS includes
AS_INCLUDES = 

# C includes
C_INCLUDES_COMMON =  \
-ICore/Inc \
-IX-CUBE-AI/App \
-IX-CUBE-AI \
-IMiddlewares/ST/AI/Inc \
-IMiddlewares/ST/STM32_ImageProcessing_Library/Inc \
-IDrivers/BSP/Components/aps6408 \
-IDrivers/BSP/Components/Common \
-IDrivers/BSP/Components/ov2640 \
-IDrivers/BSP/Components/W25Q128 \
-IDrivers/BSP/wio_lite_ai \
-IDrivers/STM32H7xx_HAL_Driver/Inc \
-IDrivers/STM32H7xx_HAL_Driver/Inc/Legacy \
-IDrivers/CMSIS/Device/ST/STM32H7xx/Include \
-IDrivers/CMSIS/DSP/Include \
-IDrivers/CMSIS/Include \

C_INCLUDES_SEEDSTUDIO_SCREEN = \
-IDrivers/BSP/Components/LCD

C_INCLUDES_VITTASCIENCE_SPI_SCREEN = \
-IDrivers/BSP/Components/ili9341 \
-IUtilities/Fonts \
-IUtilities/lcd

ifdef bsp_config_seedstudio
C_INCLUDES = $(C_INCLUDES_COMMON) $(C_INCLUDES_SEEDSTUDIO_SCREEN)
else
C_INCLUDES = $(C_INCLUDES_COMMON) $(C_INCLUDES_VITTASCIENCE_SPI_SCREEN)
endif

# compile gcc flags
ASFLAGS = $(MCU) $(AS_DEFS) $(AS_INCLUDES) $(OPT) -Wall -fdata-sections -ffunction-sections

CFLAGS += $(MCU) $(C_DEFS) $(C_INCLUDES) $(OPT) -Wall -fdata-sections -ffunction-sections

ifeq ($(DEBUG), 1)
CFLAGS += -g3 -DDEBUG 
endif


# Generate dependency information
CFLAGS += -std=gnu11 -Wall -fstack-usage -MMD -MP -MF"$(@:%.o=%.d)"


#######################################
# LDFLAGS
#######################################
# link script
LDSCRIPT = STM32H725AEIX_PSRAM.ld

# libraries
LIBS = -lc -lm -lnosys  \
-l:NetworkRuntime810_CM7_GCC.a
LIBDIR =  \
-LMiddlewares/ST/AI/Lib
LDFLAGS = $(MCU) -u _printf_float -specs=nano.specs -T$(LDSCRIPT) $(LIBDIR) -Wl,--start-group $(LIBS) -Wl,--end-group -Wl,-Map=$(BUILD_DIR)/$(TARGET).map,--cref -Wl,--gc-sections

# default action: build all
all: $(BUILD_DIR)/$(TARGET).elf $(BUILD_DIR)/$(TARGET).hex $(BUILD_DIR)/$(TARGET).bin


#######################################
# build the application
#######################################
# list of objects
OBJECTS = $(addprefix $(BUILD_DIR)/,$(notdir $(C_SOURCES:.c=.o)))
vpath %.c $(sort $(dir $(C_SOURCES)))
# list of ASM program objects
OBJECTS += $(addprefix $(BUILD_DIR)/,$(notdir $(ASM_SOURCES:.s=.o)))
vpath %.s $(sort $(dir $(ASM_SOURCES)))
OBJECTS += $(addprefix $(BUILD_DIR)/,$(notdir $(ASMM_SOURCES:.S=.o)))
vpath %.S $(sort $(dir $(ASMM_SOURCES)))

$(BUILD_DIR)/%.o: %.c Makefile | $(BUILD_DIR) 
	$(CC) -c $(CFLAGS) -Wa,-a,-ad,-alms=$(BUILD_DIR)/$(notdir $(<:.c=.lst)) $< -o $@

$(BUILD_DIR)/%.o: %.s Makefile | $(BUILD_DIR)
	$(AS) -c $(CFLAGS) $< -o $@

$(BUILD_DIR)/$(TARGET).elf: $(OBJECTS) Makefile
	$(CC) $(OBJECTS) $(LDFLAGS) -o $@
	$(SZ) $@

$(BUILD_DIR)/%.hex: $(BUILD_DIR)/%.elf | $(BUILD_DIR)
	$(HEX) $< $@
	
$(BUILD_DIR)/%.bin: $(BUILD_DIR)/%.elf | $(BUILD_DIR)
	$(BIN) $< $@	
	
$(BUILD_DIR):
	mkdir $@		

#######################################
# clean up
#######################################
clean:
	-rm -fR $(BUILD_DIR)
  
#######################################
# dependencies
#######################################
-include $(wildcard $(BUILD_DIR)/*.d)

# *** EOF ***
